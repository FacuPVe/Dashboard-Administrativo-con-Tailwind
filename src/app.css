@import "tailwindcss";

/* Define the dark variant for Tailwind CSS v4 */
@custom-variant dark (&:where(.dark, .dark *));

/* Variables de colores personalizados */
:root {
    --color-primary-50: 239 246 255;
    --color-primary-100: 219 234 254;
    --color-primary-200: 191 219 254;
    --color-primary-300: 147 197 253;
    --color-primary-400: 96 165 250;
    --color-primary-500: 59 130 246;
    --color-primary-600: 37 99 235;
    --color-primary-700: 29 78 216;
    --color-primary-800: 30 64 175;
    --color-primary-900: 30 58 138;
    
    /* Tiempos de transici√≥n */
    --transition-fast: 150ms;
    --transition-normal: 250ms;
    --transition-slow: 350ms;
}

/* Dark theme colors - will apply when .dark class is on html element */
.dark {
    --color-primary-900: 239 246 255;
    --color-primary-800: 219 234 254;
    --color-primary-700: 191 219 254;
    --color-primary-600: 147 197 253;
    --color-primary-500: 59 100 210;
    --color-primary-400: 29 78 190;
    --color-primary-300: 24 64 180;
    --color-primary-200: 22 50 160;
    --color-primary-100: 20 40 140;
    --color-primary-50: 18 30 120;
}

/* Estilos globales */
:global(body) {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

/* Asegurar transiciones suaves durante el cambio de tema */
:global(html) {
    transition: background-color var(--transition-normal) ease;
}

:global(html.dark) {
    color-scheme: dark;
}

/* Transiciones globales */
:global(*) {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: var(--transition-normal);
}

/* Utilidades de colores principales */
.bg-primary-50 {
    background-color: rgb(var(--color-primary-50));
}
.bg-primary-100 {
    background-color: rgb(var(--color-primary-100));
}
.bg-primary-200 {
    background-color: rgb(var(--color-primary-200));
}
.bg-primary-300 {
    background-color: rgb(var(--color-primary-300));
}
.bg-primary-400 {
    background-color: rgb(var(--color-primary-400));
}
.bg-primary-500 {
    background-color: rgb(var(--color-primary-500));
}
.bg-primary-600 {
    background-color: rgb(var(--color-primary-600));
}
.bg-primary-700 {
    background-color: rgb(var(--color-primary-700));
}
.bg-primary-800 {
    background-color: rgb(var(--color-primary-800));
}
.bg-primary-900 {
    background-color: rgb(var(--color-primary-900));
}

.text-primary-50 {
    color: rgb(var(--color-primary-50));
}
.text-primary-100 {
    color: rgb(var(--color-primary-100));
}
.text-primary-200 {
    color: rgb(var(--color-primary-200));
}
.text-primary-300 {
    color: rgb(var(--color-primary-300));
}
.text-primary-400 {
    color: rgb(var(--color-primary-400));
}
.text-primary-500 {
    color: rgb(var(--color-primary-500));
}
.text-primary-600 {
    color: rgb(var(--color-primary-600));
}
.text-primary-700 {
    color: rgb(var(--color-primary-700));
}
.text-primary-800 {
    color: rgb(var(--color-primary-800));
}
.text-primary-900 {
    color: rgb(var(--color-primary-900));
}

/* Clases adicionales para el modo oscuro */
.dark\:bg-gray-750 {
    background-color: rgb(31 41 55);
}

/* Estilos para los estados de tarjetas */
.status-completed {
    @apply bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300;
}
.status-processing {
    @apply bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300;
}
.status-pending {
    @apply bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300;
}
.status-cancelled {
    @apply bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300;
}

/* Animaciones y transiciones */
.sidebar-transition {
    @apply transition-transform duration-300;
}

/* Layout y contenedores */
.dashboard-container {
    @apply p-4 bg-white dark:bg-gray-800 rounded-lg shadow;
}
.card-container {
    @apply p-4 bg-white dark:bg-gray-800 rounded-lg shadow;
}

/* Animaciones adicionales */
.animate-spin {
    animation: spin 1s linear infinite;
}

.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-bounce {
    animation: bounce 1s infinite;
}

.animate-fade-in {
    animation: fadeIn 0.5s ease-in;
}

.animate-slide-in-right {
    animation: slideInRight 0.3s ease-out;
}

.animate-slide-in-left {
    animation: slideInLeft 0.3s ease-out;
}

.animate-slide-in-up {
    animation: slideInUp 0.3s ease-out;
}

.animate-slide-in-down {
    animation: slideInDown 0.3s ease-out;
}

/* Definiciones de animaciones */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: .5;
    }
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(-25%);
        animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
        transform: translateY(0);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
    }
    to {
        transform: translateX(0);
    }
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0);
    }
}

@keyframes slideInUp {
    from {
        transform: translateY(100%);
    }
    to {
        transform: translateY(0);
    }
}

@keyframes slideInDown {
    from {
        transform: translateY(-100%);
    }
    to {
        transform: translateY(0);
    }
}

.sveltekit-body {
  display: contents;
}